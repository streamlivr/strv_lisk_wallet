/// <reference types="node" />
export declare const getPublicKeyFromPrivateKey: (pk: Buffer) => Buffer;
export declare const getPrivateKeyFromPhraseAndPath: (phrase: string, path: string) => Promise<Buffer>;
export declare const signMessageWithPrivateKey: (message: string | Buffer, privateKey: Buffer, tag?: string) => SignedMessage;
export declare const verifyMessageWithPublicKey: ({ message, publicKey, signature, tag, }: SignedMessageWithTag) => boolean;
export interface SignedMessage {
    readonly message: string | Buffer;
    readonly publicKey: Buffer;
    readonly signature: Buffer;
}
interface SignedMessageWithTag extends SignedMessage {
    tag?: string;
}
export interface SignedMessageWithPrivateKey extends SignedMessage {
}
export declare const printSignedMessage: ({ message, signature, publicKey }: SignedMessage) => string;
export declare const signAndPrintMessage: (message: string, privateKey: Buffer) => string;
export declare const signDataWithPrivateKey: (tag: string, chainID: Buffer, data: Buffer, privateKey: Buffer) => Buffer;
export declare const signData: (tag: string, chainID: Buffer, data: Buffer, privateKey: Buffer) => Buffer;
export declare const verifyData: (tag: string, chainID: Buffer, data: Buffer, signature: Buffer, publicKey: Buffer) => boolean;
export {};
