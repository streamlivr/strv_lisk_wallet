/// <reference types="node" />
import { getRandomBytes } from './nacl';
export declare const hash: (data: Buffer | string, format?: string) => Buffer;
export declare const parseKeyDerivationPath: (path: string) => number[];
export declare const createMessageTag: (domain: string, version?: number | string) => string;
export declare const tagMessage: (tag: string, chainID: Buffer, message: string | Buffer) => Buffer;
export declare const BIG_ENDIAN = "big";
export declare const LITTLE_ENDIAN = "little";
export declare const intToBuffer: (value: number | string, byteLength: number, endianness?: string, signed?: boolean) => Buffer;
export declare const hexToBuffer: (hex: string, argumentName?: string) => Buffer;
export declare const generateHashOnionSeed: () => Buffer;
export declare const hashOnion: (seed: Buffer, count?: number, distance?: number) => ReadonlyArray<Buffer>;
export { getRandomBytes };
