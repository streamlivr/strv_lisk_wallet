"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLegacyAddressFromPrivateKey = exports.getLegacyAddressFromPassphrase = exports.getLegacyAddressAndPublicKeyFromPassphrase = exports.getLegacyAddressFromPublicKey = exports.getFirstEightBytesReversed = void 0;
const legacy_1 = require("./legacy");
const nacl_1 = require("./nacl");
const utils_1 = require("./utils");
const reverse = require("buffer-reverse");
const getFirstEightBytesReversed = (input) => {
    const BUFFER_SIZE = 8;
    if (typeof input === 'string') {
        return reverse(Buffer.from(input).slice(0, BUFFER_SIZE));
    }
    return reverse(Buffer.from(input).slice(0, BUFFER_SIZE));
};
exports.getFirstEightBytesReversed = getFirstEightBytesReversed;
const getLegacyAddressFromPublicKey = (publicKey) => {
    const publicKeyHash = (0, utils_1.hash)(publicKey);
    const publicKeyTransform = (0, exports.getFirstEightBytesReversed)(publicKeyHash);
    return `${publicKeyTransform.readBigUInt64BE().toString()}L`;
};
exports.getLegacyAddressFromPublicKey = getLegacyAddressFromPublicKey;
const getLegacyAddressAndPublicKeyFromPassphrase = (passphrase) => {
    const { publicKey } = (0, legacy_1.getKeys)(passphrase);
    const address = (0, exports.getLegacyAddressFromPublicKey)(publicKey);
    return {
        address,
        publicKey,
    };
};
exports.getLegacyAddressAndPublicKeyFromPassphrase = getLegacyAddressAndPublicKeyFromPassphrase;
const getLegacyAddressFromPassphrase = (passphrase) => {
    const { publicKey } = (0, legacy_1.getKeys)(passphrase);
    return (0, exports.getLegacyAddressFromPublicKey)(publicKey);
};
exports.getLegacyAddressFromPassphrase = getLegacyAddressFromPassphrase;
const getLegacyAddressFromPrivateKey = (privateKey) => {
    const publicKey = (0, nacl_1.getPublicKey)(privateKey);
    return (0, exports.getLegacyAddressFromPublicKey)(publicKey);
};
exports.getLegacyAddressFromPrivateKey = getLegacyAddressFromPrivateKey;
//# sourceMappingURL=legacy_address.js.map